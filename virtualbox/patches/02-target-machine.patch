diff -Naur a/configure b/configure
--- a/configure	2022-10-11 20:15:14.413300199 +0200
+++ b/configure	2022-10-11 20:21:25.634512132 +0200
@@ -423,11 +423,11 @@
   esac
   [ -z "$TARGET_MACHINE" ] && TARGET_MACHINE=$BUILD_MACHINE
   [ -z "$TARGET_CPU"     ] && TARGET_CPU=$BUILD_CPU
-  DEVDIR_BIN="$DEVDIR/$OS.$BUILD_MACHINE/bin"
-  log_success "Determined build machine: $OS.$BUILD_MACHINE, target machine: $OS.$TARGET_MACHINE"
+  DEVDIR_BIN="$DEVDIR/$OS.$TARGET_MACHINE/bin"
+  log_success "Determined build machine: $OS.$TARGET_MACHINE, target machine: $OS.$TARGET_MACHINE"
 
   echo "KBUILD_HOST=\"$OS\"" >> $ENV
-  echo "KBUILD_HOST_ARCH=\"$BUILD_MACHINE\"" >> $ENV
+  echo "KBUILD_HOST_ARCH=\"$TARGET_MACHINE\"" >> $ENV
   echo "KBUILD_TARGET=\"$OS\"" >> $ENV
   echo "KBUILD_TARGET_ARCH=\"$TARGET_MACHINE\"" >> $ENV
   echo "KBUILD_TARGET_CPU=\"$TARGET_CPU\"" >> $ENV
@@ -491,14 +491,14 @@
       else
         log_success "found version $cc_ver"
       fi
-      if [ "$BUILD_MACHINE" = "amd64" ]; then
+      if [ "$TARGET_MACHINE" = "amd64" ]; then
         [ -z "$CC32"  ] && CC32="$CC -m32"
         [ -z "$CXX32" ] && CXX32="$CXX -m32"
       else
         [ -z "$CC32"  ] && CC32="$CC"
         [ -z "$CXX32" ] && CXX32="$CXX"
       fi
-      if [ "$BUILD_MACHINE" = "x86" -a "$TARGET_MACHINE" = "amd64" ]; then
+      if [ "$TARGET_MACHINE" = "x86" -a "$TARGET_MACHINE" = "amd64" ]; then
         [ -z "$CC64"  ] && CC64="$CC -m64"
         [ -z "$CXX64" ] && CXX64="$CXX -m64"
       fi
@@ -556,7 +556,7 @@
         fi
       fi
       # Solaris sports a 32-bit gcc/g++.
-      if [ "$OS" = "solaris" -a "$BUILD_MACHINE" = "amd64" ]; then
+      if [ "$OS" = "solaris" -a "$TARGET_MACHINE" = "amd64" ]; then
         [ "$CC" = "gcc" ] && CC="gcc -m64"
         [ "$CXX" = "g++" ] && CXX="g++ -m64"
       fi
@@ -1935,8 +1935,8 @@
 check_kbuild()
 {
   test_header kBuild
-  if which_wrapper "$KBUILDDIR/bin/$OS.$BUILD_MACHINE/kmk" > /dev/null; then
-    KBUILDDIR_BIN="$KBUILDDIR/bin/$OS.$BUILD_MACHINE"
+  if which_wrapper "$KBUILDDIR/bin/$OS.$TARGET_MACHINE/kmk" > /dev/null; then
+    KBUILDDIR_BIN="$KBUILDDIR/bin/$OS.$TARGET_MACHINE"
 
     echo "KBUILD_PATH=\"`cd $KBUILDDIR ; pwd`\"" >> $ENV
     echo "KBUILD_DEVTOOLS=\"$DEVDIR\"" >> $ENV
@@ -2160,8 +2160,8 @@
     ;;
     *) eval "wineprefixcreate() { true ; }" ;; # now created automatically
   esac
-  export WINEPREFIX="${ODIR}wine.$BUILD_MACHINE"
-  echo "WINEPREFIX=\"${ODIR}wine.$BUILD_MACHINE\"" >> $ENV
+  export WINEPREFIX="${ODIR}wine.$TARGET_MACHINE"
+  echo "WINEPREFIX=\"${ODIR}wine.$TARGET_MACHINE\"" >> $ENV
   echo "export WINEPREFIX" >> $ENV
   rm -rf $WINEPREFIX
   mkdir -p $WINEPREFIX
@@ -2969,7 +2969,7 @@
     check_libcap
   fi
   check_compiler_h
-  [ $ONLY_ADDITIONS -eq 0 -a "$BUILD_MACHINE" = "amd64" -a $WITH_VMMRAW -eq 1 ] && check_32bit
+  [ $ONLY_ADDITIONS -eq 0 -a "$TARGET_MACHINE" = "amd64" -a $WITH_VMMRAW -eq 1 ] && check_32bit
   # tools/common/makeself*
   [ $OSE -ge 1 ] && check_makeself
 fi
