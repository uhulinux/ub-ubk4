#!/bin/sh -eux

# gcc patchset: https://gitlab.com/Matt.Jolly/chromium-patches

freespace=$((`stat -f -c "%a" .`*`stat -f -c "%s" .`/(1024*1024*1024)))

rm -Rf third_party/llvm* # 1.9G
rm -Rf third_party/rust-src # 4.4G
rm -Rf third_party/rust-toolchain # 1.3G
rm -Rf third_party/instrumented_libs # 2.2G

if [ $freespace -lt 25 ]; then
    echo "At least 25 GB free space is required!"
    exit 1
fi

procs=$(grep ^processor /proc/cpuinfo | wc -l)
jobs=$(($procs / 2))

export CC=clang
export CXX=clang++
export AR=llvm-ar
export NM=nm

# ccache
export CCACHE_CPP2=yes
export CCACHE_SLOPPINESS=time_macros

# clang version
_clang_version=$(clang --version | grep -m1 version | sed 's/.* \([0-9]\+\).*/\1/')
# enable rust nightly features
export RUSTC_BOOTSTRAP=1

_flags=("
custom_toolchain=\"//build/toolchain/linux/unbundle:default\"
host_toolchain=\"//build/toolchain/linux/unbundle:default\"
use_sysroot=false
is_debug=false
symbol_level=0
enable_linux_installer=false
cc_wrapper=\"ccache\"
clang_base_path=\"/usr\"
clang_use_chrome_plugins=false
clang_version=\"$_clang_version\"
rust_sysroot_absolute=\"/usr\"
rust_bindgen_root=\"/usr\"
rustc_version=\"$(rustc --version)\"
chrome_pgo_phase=0
use_lld=true
is_clang=true
is_cfi=false
is_official_build=true
fatal_linker_warnings=false
treat_warnings_as_errors=false
disable_fieldtrial_testing_config=true
blink_enable_generated_code_formatting=false
ffmpeg_branding=\"Chrome\"
proprietary_codecs=true
rtc_use_pipewire=true
use_pulseaudio=true
enable_nacl=false
enable_widevine=true
enable_hangout_services_extension=false
use_custom_libcxx=true
use_kerberos=false
use_system_freetype=true
use_system_harfbuzz=true
use_system_lcms2=true
use_system_libdrm=true
use_system_libffi=true
use_system_libjpeg=true
use_system_libpng=true
use_qt=true
use_qt6=true
moc_qt6_path=\"/usr/lib/qt6/libexec/\"
gtk_version=4
icu_use_data_file=false
")

# rendszerből használadó libek
_syslibs=(
	fontconfig
	freetype
	harfbuzz-ng
	icu
	libdrm
	libevent
	libjpeg
	libpng
#	libwebp
#	libxml
#	libxslt
)
for _lib in $_syslibs libjpeg_turbo; do
	find . -type f -path "*third_party/$_lib/*" \
   	\! -path "*third_party/$_lib/chromium/*" \
	\! -path "*third_party/$_lib/google/*" \
	\! -path './base/third_party/icu/*' \
	\! -path './third_party/libxml/*' \
	\! -path './third_party/pdfium/third_party/freetype/include/pstables.h' \
	\! -path './third_party/harfbuzz-ng/utils/hb_scoped.h' \
	\! -path './third_party/crashpad/crashpad/third_party/zlib/zlib_crashpad.h' \
   	\! -regex '.*\.\(gn\|gni\|isolate\|py\)' \
	-delete
done

outdir="../object"

# Allow building against system libraries in official builds
sed -i 's/OFFICIAL_BUILD/GOOGLE_CHROME_BUILD/' tools/generate_shim_headers/generate_shim_headers.py

# external usb.ids (hwdata)
sed "s|//third_party/usb_ids/usb.ids|/usr/share/hwdata/usb.ids|g" -i services/device/public/cpp/usb/BUILD.gn

python3 build/linux/unbundle/replace_gn_files.py --system-libraries "${_syslibs[@]}"

# Link to system tools required by the build
rm third_party/node/linux/node-linux-x64/bin/node # precompiled binary
ln -s /usr/bin/node third_party/node/linux/node-linux-x64/bin/
ln -s /usr/bin/java third_party/jdk/current/bin/

# gn a buildhoz
# tools/gn/bootstrap/bootstrap.py --build-path=$outdir --gn-gen-args=" ${_flags[@]} "

# extra flags
export LDFLAGS+="-Wl,-rpath,/usr/lib/chromium/ -Wl,--no-keep-memory"

# build options: az --args utáni sorok nem kezdődhetnek tab karakterrel!
# $outdir/gn gen $outdir -v --args=" ${_flags[@]} " --script-executable=/usr/bin/python3
gn gen $outdir -v --args=" ${_flags[@]} " --script-executable=/usr/bin/python3

# gn args list - kihagyható, de segít a lehetséges opciók megadásához
# $outdir/gn args --list $UB_COMPILEDIR/$outdir > $UB_COMPILEDIR/$outdir/gn-args-full.list
gn args --list $outdir > $outdir/gn-args-full.list

# ninja
LC_ALL=C ninja -j $jobs -C $outdir -v pdf chrome chrome_sandbox chromedriver.unstripped
