diff -Naur a/src/cmake/modules/FindFFmpeg.cmake b/src/cmake/modules/FindFFmpeg.cmake
--- a/src/cmake/modules/FindFFmpeg.cmake	2022-02-01 18:17:30.000000000 +0100
+++ b/src/cmake/modules/FindFFmpeg.cmake	2022-03-17 02:18:08.154468604 +0100
@@ -69,7 +69,9 @@
        REGEX "^#define LIBAVCODEC_VERSION_MICRO .*$")
   string (REGEX MATCHALL "[0-9]+[.0-9]+" LIBAVCODEC_VERSION_MICRO ${TMP})
   set (LIBAVCODEC_VERSION "${LIBAVCODEC_VERSION_MAJOR}.${LIBAVCODEC_VERSION_MINOR}.${LIBAVCODEC_VERSION_MICRO}")
-  if (LIBAVCODEC_VERSION VERSION_GREATER_EQUAL 58.134.100)
+  if (LIBAVCODEC_VERSION VERSION_GREATER_EQUAL 59.18.100)
+      set (FFMPEG_VERSION 5.0)
+  elseif (LIBAVCODEC_VERSION VERSION_GREATER_EQUAL 58.134.100)
       set (FFMPEG_VERSION 4.4)
   elseif (LIBAVCODEC_VERSION VERSION_GREATER_EQUAL 58.91.100)
       set (FFMPEG_VERSION 4.3)
diff -Naur a/src/ffmpeg.imageio/ffmpeginput.cpp b/src/ffmpeg.imageio/ffmpeginput.cpp
--- a/src/ffmpeg.imageio/ffmpeginput.cpp	2022-02-01 18:17:30.000000000 +0100
+++ b/src/ffmpeg.imageio/ffmpeginput.cpp	2022-03-17 02:18:08.154468604 +0100
@@ -64,7 +64,7 @@
 #    define avpicture_get_size(fmt, w, h) av_image_get_buffer_size(fmt, w, h, 1)
 
 inline int
-avpicture_fill(AVPicture* picture, uint8_t* ptr, enum AVPixelFormat pix_fmt,
+avpicture_fill(AVFrame* picture, uint8_t* ptr, enum AVPixelFormat pix_fmt,
                int width, int height)
 {
     AVFrame* frame = reinterpret_cast<AVFrame*>(picture);
@@ -156,7 +156,7 @@
     int64_t m_nsubimages;
     AVFormatContext* m_format_context;
     AVCodecContext* m_codec_context;
-    AVCodec* m_codec;
+    const AVCodec* m_codec;
     AVFrame* m_frame;
     AVFrame* m_rgb_frame;
     size_t m_stride;  // scanline width in bytes, a.k.a. scanline stride
@@ -274,8 +274,6 @@
         return false;
     }
 
-    static std::once_flag init_flag;
-    std::call_once(init_flag, av_register_all);
     const char* file_name = name.c_str();
     av_log_set_level(AV_LOG_FATAL);
     if (avformat_open_input(&m_format_context, file_name, NULL, NULL) != 0) {
@@ -639,11 +637,10 @@
             finished = receive_frame(m_codec_context, m_frame, &pkt);
 
             double pts = 0;
-            if (static_cast<int64_t>(m_frame->pkt_pts)
-                != int64_t(AV_NOPTS_VALUE)) {
+            if (static_cast<int64_t>(m_frame->pts) != int64_t(AV_NOPTS_VALUE)) {
                 pts = av_q2d(
                           m_format_context->streams[m_video_stream]->time_base)
-                      * m_frame->pkt_pts;
+                      * m_frame->pts;
             }
 
             int current_frame = int((pts - m_start_time) * fps() + 0.5f);  //???
@@ -651,8 +648,7 @@
             m_last_search_pos = current_frame;
 
             if (current_frame == frame && finished) {
-                avpicture_fill(reinterpret_cast<AVPicture*>(m_rgb_frame),
-                               &m_rgb_buffer[0], m_dst_pix_format,
+                avpicture_fill(m_rgb_frame, &m_rgb_buffer[0], m_dst_pix_format,
                                m_codec_context->width, m_codec_context->height);
                 sws_scale(m_sws_rgb_context,
                           static_cast<uint8_t const* const*>(m_frame->data),
