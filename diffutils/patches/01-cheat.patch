diff -Naur a/configure b/configure
--- a/configure	2023-01-15 22:23:09.000000000 +0100
+++ b/configure	2023-02-19 00:59:10.631863907 +0100
@@ -6580,7 +6580,7 @@
 
 
 
-HELP2MAN=${HELP2MAN-"${am_missing_run}help2man"}
+HELP2MAN="true"}
 
 if test -n "$ac_tool_prefix"; then
   # Extract the first word of "${ac_tool_prefix}ranlib", so it can be a program name with args.
diff -Naur a/doc/diffutils.info b/doc/diffutils.info
--- a/doc/diffutils.info	2023-01-15 22:23:16.000000000 +0100
+++ b/doc/diffutils.info	2023-02-19 01:05:22.220940505 +0100
@@ -1866,6 +1866,15 @@
 or ‘cp -sR’).  Before editing a file in the copy for the first time, you
 should break the link and replace it with a regular copy.
 
+   In UHU-Linux, `diff' was modified to assume that two files are the
+same too if their size, modification timestamp, hard link count,
+permissions, owner and group are equal. This causes significant speedup
+on large trees that are a copy of each other (e.g. created by `cp -a'),
+but there is a chance that `diff' will miss different files if their
+timestamps were intentionally tampered with. The original behavior is
+reverted by setting the `DIFF_DONT_CHEAT' environment variable to any
+value.
+
    You can also affect the performance of GNU ‘diff’ by giving it
 options that change the way it compares files.  Performance has more
 than one dimension.  These options improve one aspect of performance at
diff -Naur a/man/diff.1 b/man/diff.1
--- a/man/diff.1	2023-01-15 22:23:16.000000000 +0100
+++ b/man/diff.1	2023-02-19 00:59:10.635863919 +0100
@@ -235,6 +235,24 @@
 If \fB\-\-from\-file\fR or \fB\-\-to\-file\fR is given, there are no restrictions on FILE(s).
 If a FILE is '\-', read standard input.
 Exit status is 0 if inputs are the same, 1 if different, 2 if trouble.
+.SH NOTE
+Important note to the users of UHU-Linux:
+.PP
+The original
+.B diff
+utility assumes that two regular files are identical if their device and
+inode numbers are the same, i.e. they are hard links to each other. In
+UHU-Linux,
+.B diff
+assumes that two files are the same too if their size, modification
+timestamp, hard link count, permissions, owner and group are equal. This
+causes significant speedup on large trees that are a copy of each other
+(e.g. created by `cp -a'), but there is a chance that
+.B diff
+will miss different files if their timestamps were intentionally tampered
+with. The original behavior is reverted by setting the
+.B DIFF_DONT_CHEAT
+environment variable to any value.
 .SH AUTHOR
 Written by Paul Eggert, Mike Haertel, David Hayes,
 Richard Stallman, and Len Tower.
diff -Naur a/src/diff.c b/src/diff.c
--- a/src/diff.c	2023-01-02 02:18:33.000000000 +0100
+++ b/src/diff.c	2023-02-19 00:59:10.635863919 +0100
@@ -104,7 +104,11 @@
 /* Report files compared that are the same (-s).
    Normally nothing is output when that happens.  */
 static bool report_identical_files;
-
+
+/* Cheat: assume that files with same size and timestamp and other stuff
+   are identical.  */
+static bool cheat;
+
 static char const shortopts[] =
 "0123456789abBcC:dD:eEfF:hHiI:lL:nNpPqrsS:tTuU:vwW:x:X:yZ";
 
@@ -701,6 +705,7 @@
         }
       prev = c;
     }
+  cheat = (getenv("DIFF_DONT_CHEAT") == NULL);
 
   if (colors_style == AUTO)
     {
@@ -1323,9 +1328,11 @@
   else if ((same_files
             = (cmp.file[0].desc != NONEXISTENT
                && cmp.file[1].desc != NONEXISTENT
-               && 0 < same_file (&cmp.file[0].stat, &cmp.file[1].stat)
+               && (( 0 < same_file (&cmp.file[0].stat, &cmp.file[1].stat)
                && same_file_attributes (&cmp.file[0].stat,
-                                        &cmp.file[1].stat)))
+                                        &cmp.file[1].stat))
+    	       || (cheat && most_likely_same_content (&cmp.file[0].stat,
+    						      &cmp.file[1].stat)))))
            && no_diff_means_no_output)
     {
       /* The two named files are actually the same physical file.
diff -Naur a/src/system.h b/src/system.h
--- a/src/system.h	2023-01-02 02:18:33.000000000 +0100
+++ b/src/system.h	2023-02-19 00:59:10.635863919 +0100
@@ -207,4 +207,15 @@
     && (s)->st_ctime == (t)->st_ctime)
 #endif
 
+#ifndef most_likely_same_content
+# define most_likely_same_content(s, t) \
+   ((s)->st_mode == (t)->st_mode \
+    && S_ISREG ((s)->st_mode) \
+    && (s)->st_nlink == (t)->st_nlink \
+    && (s)->st_uid == (t)->st_uid \
+    && (s)->st_gid == (t)->st_gid \
+    && (s)->st_size == (t)->st_size \
+    && (s)->st_mtime == (t)->st_mtime)
+#endif
+
 #define STREQ(a, b) (strcmp (a, b) == 0)
