#!/bin/bash -eux

KVER="$(ls -1 /usr/lib/modules | grep x86_64)"

#célkönyvtárak
cellibdir="$UB_INSTALLDIR"/usr/lib
moduldir="$UB_INSTALLDIR"/usr/lib/modules/"$KVER"/kernel/drivers/video
xmoduldir="$cellibdir"/xorg/modules
sharedir="$UB_INSTALLDIR"/usr/share
desktopdir="$sharedir"/applications
mandir="$sharedir"/man/man1
vendordir="$UB_INSTALLDIR"/etc/OpenCL/vendors
pixmapdir="$sharedir"/pixmaps/
egldir="$sharedir"/egl/egl_external_platform.d
vulcandir="$sharedir"/vulcan/icd.d
xconfdir="$sharedir"/X11/x.org.conf.d
glvnddir="$sharedir"/glvnd/egl_vendor.d
vdpaudir=$cellibdir/vdpau

#könyvtárgyártás
mkdir -p "$cellibdir"/nvidia \
	"$moduldir" \
	"$xmoduldir"/{drivers,extensions} \
	"$desktopdir" \
	"$mandir" \
	"$vendordir" \
	"$pixmapdir" \
	"$egldir" \
	"$vulcandir" \
	"$xconfdir" \
	"$glvnddir" \
	"$vdpaudir"

	cd nvsett
export NV_USE_BUNDLED_LIBJANSSON=0
export PREFIX=/usr
ub_install

# desktop
mv	doc/nvidia-settings.desktop "$desktopdir"/
mv	doc/nvidia-settings.png "$pixmapdir"/
gunzip	$mandir/nvidia-settings.1.gz
cd ..

# felesleges gtk libek
rm libnvidia-gtk*

#kernelmodulok
cp kernel/*.ko "$moduldir"/

# binárisok (patchelf)
binaries='
    nvidia-xconfig
	nvidia-smi
	nvidia-modprobe
	nvidia-debugdump
	nvidia-persistenced
	nvidia-cuda-mps-server
	nvidia-cuda-mps-control
'
for binary in $binaries;do
    patchelf --set-interpreter /usr/lib/ld-linux-x86-64.so.2 $binary
    mv $binary "$UB_INSTALLDIR"/usr/bin/
done

mv	nvidia-bug-report.sh "$UB_INSTALLDIR"/usr/bin/

# man
gunzip	*.1.gz
mv	*.1 "$mandir"/

# vendor
mv	nvidia.icd "$vendordir"/

# Áthelyezzük a nem a $cellibdir alá kerülő *.so-kat a "$cellibdir"/nvidia/ alá

# postinstből majd libglx.so nevű link lesz rá a $cellibdir/xorg/extensions alá
mv	libglx.so."$UB_VERSION" "$cellibdir"/nvidia/

# libglvnd ütközések, a libglvnd elsőbbséget élvez
mv	libEGL.so.1.1.0 "$cellibdir"/nvidia/
mv	libGLESv1_CM.so.1.2.0 "$cellibdir"/nvidia/
mv	libGLESv2.so.2.1.0 "$cellibdir"/nvidia/
mv	libGL.so.1.7.0 "$cellibdir"/nvidia/
mv	libGLX.so.0 "$cellibdir"/nvidia/
mv	libGLdispatch.so.0 "$cellibdir"/nvidia/
mv	libOpenGL.so.0 "$cellibdir"/nvidia/

# glvnd rendszer van és nem legacy
mv	libGL.so.${UB_VERSION} "$cellibdir"/nvidia/

# nvidia driver az x.org-server részére
mv	nvidia_drv.so "$xmoduldir"/drivers/
mv	tls "$cellibdir"

# vdpau cuccok
mv libvdpau_nvidia.so.${UB_VERSION} $vdpaudir

# minden maradék *.so áthelyezése a libekbe

mv *.so.* "$cellibdir"/

# Beállítő fájlok elhelyezése

# glvnd
mv 10_nvidia.json "$glvnddir"/

#wailand, vulcan
mv 10_nvidia_wayland.json $egldir/
mv nvidia_icd.json.template $vulcandir/nvidia_icd.json

# két videókártyás rendszereknek
mv nvidia-drm-outputclass.conf $xconfdir/10-nvidia-drm-outputclass.conf

# két videókártyás rendszereknek persistenced.service
mv nvidia-persistenced-init/systemd/nvidia-persistenced.service.template \
    $UB_INSTALLDIR/usr/lib/systemd/system/nvidia-persistenced.service

#libxnvctrl

cd nvsett/src/libXNVCtrl
mkdir -p "${UB_INSTALLDIR}"/usr/{include/NVCtrl,lib/pkgconfig}
cp nv_control.h NVCtrl{,Lib}.h "${UB_INSTALLDIR}"/usr/include/NVCtrl/
cp libXNVCtrl.a "${cellibdir}"/

# pc rendberakás
cat <<'EOF' > "${UB_INSTALLDIR}"/usr/lib/pkgconfig/libXNVCtrl.pc
prefix=/usr
libdir=${prefix}/lib
includedir=${prefix}/include/NVCtrl

Name: libXNVCtrl
Description: Library for accessing NV-CONTROL extension in NVIDIA's kurrent drivers.
Version: %version%
Libs: -L${libdir} -lXNVCtrl
Cflags: -I${includedir}
EOF

sed -i -e "s/%version%/$UB_VERSION/" "${UB_INSTALLDIR}"/usr/lib/pkgconfig/libXNVCtrl.pc

#linkgyártások
cd "$cellibdir"

ln -s libwfb.so xorg/modules/libnvidia-wfb.so.${UB_VERSION}
for i in `ls -1 libnv*`;do
lib=$(echo $i | sed s/\.${UB_VERSION}//g)
solink=$(echo $lib | sed s/so\..*/so/)
ln -s $i $lib.1
ln -s $lib.1 $solink
done

cd $vdpaudir
for i in `ls -1 libvdpau*`;do
lib=$(echo $i | sed s/\.${UB_VERSION}//g)
solink=$(echo $lib | sed s/so\..*/so/)
ln -s $i $lib.1
ln -s $lib.1 $solink
done

# Támogatott chepkhez a verzió beillesztése a csomag leírásába
sed "s/version/${UB_VERSION}/g" -i ${UB_SRCDIR}/packages/nvidia-390/description/hu
