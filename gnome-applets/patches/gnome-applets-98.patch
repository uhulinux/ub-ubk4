From 6394cc1b3106c1a9b37f310fae512871089e7297 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Tue, 30 Jan 2024 04:26:11 +0100
Subject: [PATCH 1/8] window-buttons: Completely skip loading preferences
 window when already present

There is no need to bind the signals again. It also causes a problem that the items are added multiple times to the theme combobox when the user tries to open the preferences multiple times.
---
 gnome-applets/window-buttons/preferences.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/gnome-applets/window-buttons/preferences.c b/gnome-applets/window-buttons/preferences.c
index 5dc620130..b344e654a 100644
--- a/gnome-applets/window-buttons/preferences.c
+++ b/gnome-applets/window-buttons/preferences.c
@@ -449,17 +449,17 @@ wb_applet_properties_cb (GSimpleAction *action,
 
 	wbapplet = (WBApplet *) user_data;
 
-	// Create the Properties dialog from the GtkBuilder file
-	if (wbapplet->window_prefs) {
+	if (wbapplet->window_prefs != NULL) {
 		// Window already exists, only open
-		gtk_window_present(GTK_WINDOW(wbapplet->window_prefs)); // CRASHES HERE BECAUSE window_prefs IS NOT NULL WHEN IT SHOULD BE!!!
-	} else {
-		// Create window from builder
-		gtk_builder_set_translation_domain (wbapplet->prefbuilder, GETTEXT_PACKAGE);
-		gtk_builder_add_from_resource (wbapplet->prefbuilder, GRESOURCE_PREFIX "/ui/window-buttons.ui", NULL);
-		wbapplet->window_prefs = GTK_WIDGET (gtk_builder_get_object (wbapplet->prefbuilder, "properties"));
+		gtk_window_present(GTK_WINDOW(wbapplet->window_prefs));
+		return;
 	}
 
+	// Create the Properties dialog from the GtkBuilder file
+	gtk_builder_set_translation_domain (wbapplet->prefbuilder, GETTEXT_PACKAGE);
+	gtk_builder_add_from_resource (wbapplet->prefbuilder, GRESOURCE_PREFIX "/ui/window-buttons.ui", NULL);
+	wbapplet->window_prefs = GTK_WIDGET (gtk_builder_get_object (wbapplet->prefbuilder, "properties"));
+
 	/* Get the widgets from GtkBuilder & Init data structures we'll pass to our buttons */
 	btn = getImageButtons(wbapplet->prefbuilder);
 
-- 
GitLab


From f3336d146cec4071d2bfe2fed534fdf1c59f4892 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Tue, 30 Jan 2024 04:27:25 +0100
Subject: [PATCH 2/8] window-title: Completely skip loading preferences window
 when already present

There is no need to bind the signals again.
---
 gnome-applets/window-title/preferences.c | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/gnome-applets/window-title/preferences.c b/gnome-applets/window-title/preferences.c
index 9f1f88ae9..4f9638bb3 100644
--- a/gnome-applets/window-title/preferences.c
+++ b/gnome-applets/window-title/preferences.c
@@ -223,14 +223,17 @@ wt_applet_properties_cb (GSimpleAction *action,
 
 	wtapplet = (WTApplet *) user_data;
 
-	// Create the Properties dialog from the GtkBuilder file
-	if(wtapplet->window_prefs) {
+	if (wtapplet->window_prefs != NULL) {
+		// Window already exists, only open
 		gtk_window_present(GTK_WINDOW(wtapplet->window_prefs));
-	} else {
-		gtk_builder_set_translation_domain (wtapplet->prefbuilder, GETTEXT_PACKAGE);
-		gtk_builder_add_from_resource (wtapplet->prefbuilder, GRESOURCE_PREFIX "/ui/window-title.ui", NULL);
-		wtapplet->window_prefs = GTK_WIDGET (gtk_builder_get_object (wtapplet->prefbuilder, "properties"));
+		return;
 	}
+
+	// Create the Properties dialog from the GtkBuilder file
+	gtk_builder_set_translation_domain (wtapplet->prefbuilder, GETTEXT_PACKAGE);
+	gtk_builder_add_from_resource (wtapplet->prefbuilder, GRESOURCE_PREFIX "/ui/window-title.ui", NULL);
+	wtapplet->window_prefs = GTK_WIDGET (gtk_builder_get_object (wtapplet->prefbuilder, "properties"));
+
 	//gtk_builder_connect_signals (wtapplet->prefbuilder, NULL); // no need for now
 
 	chkb_only_maximized = GTK_TOGGLE_BUTTON (gtk_builder_get_object(wtapplet->prefbuilder, CFG_ONLY_MAXIMIZED));
-- 
GitLab


From e69a07f83c1d9344b63e9ea631e7fb8f1759eb51 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Tue, 30 Jan 2024 04:32:19 +0100
Subject: [PATCH 3/8] window-buttons: Bind to "response" signal on preferences
 dialog

We don't need to bind "clicked" and "destroy" signals separately, the "response" signal handles it better.
---
 gnome-applets/window-buttons/preferences.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

diff --git a/gnome-applets/window-buttons/preferences.c b/gnome-applets/window-buttons/preferences.c
index b344e654a..dc817baf2 100644
--- a/gnome-applets/window-buttons/preferences.c
+++ b/gnome-applets/window-buttons/preferences.c
@@ -403,7 +403,8 @@ cb_orientation (GtkRadioButton *style,
 }
 
 static void
-properties_close (GtkButton *object,
+properties_close (GtkDialog *dialog,
+                  gint       response_id,
                   WBApplet  *wbapplet)
 {
   gtk_widget_destroy(wbapplet->window_prefs);
@@ -441,7 +442,6 @@ wb_applet_properties_cb (GSimpleAction *action,
 	GtkToggleButton *chkb_metacity_order;
 	GtkToggleButton *chkb_show_tooltips;
 	GtkButton *btn_reload_order;
-	GtkButton *btn_close;
 	GtkEntry *entry_custom_order;
 	GtkComboBox *combo_theme;
 	GtkToggleButton **chkb_btn_hidden;
@@ -491,7 +491,6 @@ wb_applet_properties_cb (GSimpleAction *action,
 	chkb_metacity_order = GTK_TOGGLE_BUTTON (gtk_builder_get_object(wbapplet->prefbuilder, CFG_USE_METACITY_LAYOUT));
 	chkb_show_tooltips = GTK_TOGGLE_BUTTON (gtk_builder_get_object(wbapplet->prefbuilder, CFG_SHOW_TOOLTIPS));
 	btn_reload_order = GTK_BUTTON (gtk_builder_get_object(wbapplet->prefbuilder, "btn_reload_order"));
-	btn_close = GTK_BUTTON (gtk_builder_get_object(wbapplet->prefbuilder, "btn_close"));
 	entry_custom_order = GTK_ENTRY (gtk_builder_get_object(wbapplet->prefbuilder, CFG_BUTTON_LAYOUT));
 	combo_theme = GTK_COMBO_BOX (gtk_builder_get_object(wbapplet->prefbuilder, CFG_THEME));
 	chkb_btn_hidden = getHideButtons(wbapplet->prefbuilder);
@@ -541,8 +540,7 @@ wb_applet_properties_cb (GSimpleAction *action,
 	g_signal_connect(G_OBJECT(chkb_show_tooltips), "clicked", G_CALLBACK (cb_show_tooltips), wbapplet);
 	g_signal_connect(G_OBJECT(btn_reload_order), "clicked", G_CALLBACK (cb_reload_buttons), wbapplet);
 	g_signal_connect(G_OBJECT(combo_theme), "changed", G_CALLBACK(cb_theme_changed), wbapplet);
-	g_signal_connect(G_OBJECT(btn_close), "clicked", G_CALLBACK (properties_close), wbapplet);
-	g_signal_connect(G_OBJECT(wbapplet->window_prefs), "destroy", G_CALLBACK(properties_close), wbapplet);
+	g_signal_connect(G_OBJECT(wbapplet->window_prefs), "response", G_CALLBACK(properties_close), wbapplet);
 
 	gtk_widget_show (wbapplet->window_prefs);
 
-- 
GitLab


From 39152210c88b516fc3259b6ae002eb3436b180dc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Tue, 30 Jan 2024 04:32:40 +0100
Subject: [PATCH 4/8] window-title: Bind to "response" signal on preferences
 dialog

We don't need to bind "clicked" and "destroy" signals separately, the "response" signal handles it better.
---
 gnome-applets/window-title/preferences.c | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/gnome-applets/window-title/preferences.c b/gnome-applets/window-title/preferences.c
index 4f9638bb3..982374cf2 100644
--- a/gnome-applets/window-title/preferences.c
+++ b/gnome-applets/window-title/preferences.c
@@ -21,7 +21,7 @@
 #include "config.h"
 #include "preferences.h"
 
-static void properties_close (GtkButton *, WTApplet *);
+static void properties_close (GtkDialog *, gint, WTApplet *);
 
 static void
 savePreferences (WTPreferences *wtp,
@@ -218,7 +218,6 @@ wt_applet_properties_cb (GSimpleAction *action,
 	GtkFontButton *btn_font_active;
 	GtkColorButton *btn_color_inactive;
 	GtkFontButton *btn_font_inactive;
-	GtkButton *btn_close;
 	GtkGrid *grid_custom_style;
 
 	wtapplet = (WTApplet *) user_data;
@@ -250,7 +249,6 @@ wt_applet_properties_cb (GSimpleAction *action,
 	btn_font_active = GTK_FONT_BUTTON (gtk_builder_get_object(wtapplet->prefbuilder, "btn_font_active"));
 	btn_color_inactive = GTK_COLOR_BUTTON (gtk_builder_get_object(wtapplet->prefbuilder, "btn_color_inactive"));
 	btn_font_inactive = GTK_FONT_BUTTON (gtk_builder_get_object(wtapplet->prefbuilder, "btn_font_inactive"));
-	btn_close = GTK_BUTTON (gtk_builder_get_object(wtapplet->prefbuilder, "btn_close"));
 	grid_custom_style = GTK_GRID (gtk_builder_get_object (wtapplet->prefbuilder, "grid_custom_style"));
 
 	// set widgets according to preferences
@@ -286,15 +284,15 @@ wt_applet_properties_cb (GSimpleAction *action,
 	g_signal_connect(G_OBJECT(btn_font_active), "font-set", G_CALLBACK(cb_font_active_set), wtapplet);
 	g_signal_connect(G_OBJECT(btn_color_inactive), "color-set", G_CALLBACK(cb_color_inactive_fg_set), wtapplet);
 	g_signal_connect(G_OBJECT(btn_font_inactive), "font-set", G_CALLBACK(cb_font_inactive_set), wtapplet);
-	g_signal_connect(G_OBJECT(btn_close), "clicked", G_CALLBACK (properties_close), wtapplet);
-	g_signal_connect(G_OBJECT(wtapplet->window_prefs), "destroy", G_CALLBACK(properties_close), wtapplet);
+	g_signal_connect(G_OBJECT(wtapplet->window_prefs), "response", G_CALLBACK(properties_close), wtapplet);
 
 	gtk_widget_show_all (wtapplet->window_prefs);
 }
 
 /* Close the Properties dialog - we're not saving anything (it's already saved) */
 static void
-properties_close (GtkButton *object,
+properties_close (GtkDialog *dialog,
+                  gint       response_id,
                   WTApplet  *wtapplet)
 {
 	gtk_widget_destroy(wtapplet->window_prefs);
-- 
GitLab


From dc04509c1ec08d1e4dcd81e4e1d9cb15cb87070c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Tue, 30 Jan 2024 04:33:31 +0100
Subject: [PATCH 5/8] window-buttons: Destroy preferences window on dispose

Otherwise it remains open after the applet was removed from the panel.
---
 gnome-applets/window-buttons/window-buttons.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/gnome-applets/window-buttons/window-buttons.c b/gnome-applets/window-buttons/window-buttons.c
index 9c8e50a96..cb8b4f7d1 100644
--- a/gnome-applets/window-buttons/window-buttons.c
+++ b/gnome-applets/window-buttons/window-buttons.c
@@ -68,6 +68,8 @@ wb_applet_dispose (GObject *object)
 
   self = WB_APPLET (object);
 
+  g_clear_pointer (&self->window_prefs, gtk_widget_destroy);
+
   if (self->active_window_changed_id != 0)
     {
       g_signal_handler_disconnect (self->activescreen,
-- 
GitLab


From 5e13b237abbbc1675e887044cbe916b0272ab723 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Tue, 30 Jan 2024 04:33:55 +0100
Subject: [PATCH 6/8] window-title: Destroy preferences window on dispose

Otherwise it remains open after the applet was removed from the panel.
---
 gnome-applets/window-title/window-title.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/gnome-applets/window-title/window-title.c b/gnome-applets/window-title/window-title.c
index 4c32ef5da..8fef6b3ab 100644
--- a/gnome-applets/window-title/window-title.c
+++ b/gnome-applets/window-title/window-title.c
@@ -61,6 +61,8 @@ wt_applet_dispose (GObject *object)
 
   self = WT_APPLET (object);
 
+  g_clear_pointer (&self->window_prefs, gtk_widget_destroy);
+
   if (self->active_window_changed_id != 0)
     {
       g_signal_handler_disconnect (self->activescreen,
-- 
GitLab


From d41c6eca4bec2a83cf27cf642b4d41f82488cfb2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Tue, 30 Jan 2024 17:52:40 +0100
Subject: [PATCH 7/8] window-buttons: Clear GtkBuilder object when closing
 preferences window

---
 gnome-applets/window-buttons/preferences.c    | 3 +++
 gnome-applets/window-buttons/window-buttons.c | 3 ++-
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/gnome-applets/window-buttons/preferences.c b/gnome-applets/window-buttons/preferences.c
index dc817baf2..d4f24b876 100644
--- a/gnome-applets/window-buttons/preferences.c
+++ b/gnome-applets/window-buttons/preferences.c
@@ -409,6 +409,8 @@ properties_close (GtkDialog *dialog,
 {
   gtk_widget_destroy(wbapplet->window_prefs);
   wbapplet->window_prefs = NULL;
+  g_object_unref (wbapplet->prefbuilder);
+  wbapplet->prefbuilder = NULL;
 }
 
 static void
@@ -456,6 +458,7 @@ wb_applet_properties_cb (GSimpleAction *action,
 	}
 
 	// Create the Properties dialog from the GtkBuilder file
+	wbapplet->prefbuilder = gtk_builder_new ();
 	gtk_builder_set_translation_domain (wbapplet->prefbuilder, GETTEXT_PACKAGE);
 	gtk_builder_add_from_resource (wbapplet->prefbuilder, GRESOURCE_PREFIX "/ui/window-buttons.ui", NULL);
 	wbapplet->window_prefs = GTK_WIDGET (gtk_builder_get_object (wbapplet->prefbuilder, "properties"));
diff --git a/gnome-applets/window-buttons/window-buttons.c b/gnome-applets/window-buttons/window-buttons.c
index cb8b4f7d1..0e0b32cf0 100644
--- a/gnome-applets/window-buttons/window-buttons.c
+++ b/gnome-applets/window-buttons/window-buttons.c
@@ -69,6 +69,7 @@ wb_applet_dispose (GObject *object)
   self = WB_APPLET (object);
 
   g_clear_pointer (&self->window_prefs, gtk_widget_destroy);
+  g_clear_object (&self->prefbuilder);
 
   if (self->active_window_changed_id != 0)
     {
@@ -677,7 +678,7 @@ init_wbapplet (WBApplet *wbapplet)
 	wbapplet->activewindow = wnck_screen_get_active_window(wbapplet->activescreen);
 	wbapplet->umaxedwindow = getUpperMaximized(wbapplet);
 	wbapplet->rootwindow = getRootWindow(wbapplet->activescreen);
-	wbapplet->prefbuilder = gtk_builder_new();
+	wbapplet->prefbuilder = NULL;
 	wbapplet->box = GTK_BOX(gtk_box_new(GTK_ORIENTATION_HORIZONTAL, 0));
 	wbapplet->button = createButtons(wbapplet);
 	wbapplet->orient = gp_applet_get_orientation(GP_APPLET (wbapplet));
-- 
GitLab


From f9da5eccaa65d26e15e3cf1b8ea75fb813906e5d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ball=C3=B3=20Gy=C3=B6rgy?= <ballogyor@gmail.com>
Date: Tue, 30 Jan 2024 17:53:01 +0100
Subject: [PATCH 8/8] window-title: Clear GtkBuilder object when closing
 preferences window

---
 gnome-applets/window-title/preferences.c  | 3 +++
 gnome-applets/window-title/window-title.c | 3 ++-
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/gnome-applets/window-title/preferences.c b/gnome-applets/window-title/preferences.c
index 982374cf2..220bd4843 100644
--- a/gnome-applets/window-title/preferences.c
+++ b/gnome-applets/window-title/preferences.c
@@ -229,6 +229,7 @@ wt_applet_properties_cb (GSimpleAction *action,
 	}
 
 	// Create the Properties dialog from the GtkBuilder file
+	wtapplet->prefbuilder = gtk_builder_new ();
 	gtk_builder_set_translation_domain (wtapplet->prefbuilder, GETTEXT_PACKAGE);
 	gtk_builder_add_from_resource (wtapplet->prefbuilder, GRESOURCE_PREFIX "/ui/window-title.ui", NULL);
 	wtapplet->window_prefs = GTK_WIDGET (gtk_builder_get_object (wtapplet->prefbuilder, "properties"));
@@ -297,4 +298,6 @@ properties_close (GtkDialog *dialog,
 {
 	gtk_widget_destroy(wtapplet->window_prefs);
 	wtapplet->window_prefs = NULL;
+	g_object_unref (wtapplet->prefbuilder);
+	wtapplet->prefbuilder = NULL;
 }
diff --git a/gnome-applets/window-title/window-title.c b/gnome-applets/window-title/window-title.c
index 8fef6b3ab..6f4030eee 100644
--- a/gnome-applets/window-title/window-title.c
+++ b/gnome-applets/window-title/window-title.c
@@ -62,6 +62,7 @@ wt_applet_dispose (GObject *object)
   self = WT_APPLET (object);
 
   g_clear_pointer (&self->window_prefs, gtk_widget_destroy);
+  g_clear_object (&self->prefbuilder);
 
   if (self->active_window_changed_id != 0)
     {
@@ -706,7 +707,7 @@ init_wtapplet (WTApplet *wtapplet)
 	wtapplet->activewindow = wnck_screen_get_active_window(wtapplet->activescreen);
 	wtapplet->umaxedwindow = getUpperMaximized(wtapplet);
 	wtapplet->rootwindow = getRootWindow(wtapplet->activescreen);
-	wtapplet->prefbuilder = gtk_builder_new ();
+	wtapplet->prefbuilder = NULL;
 	wtapplet->box = GTK_BOX(gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0));
 	wtapplet->icon = GTK_IMAGE(gtk_image_new());
 	wtapplet->title = GTK_LABEL(gtk_label_new(NULL));
-- 
GitLab

