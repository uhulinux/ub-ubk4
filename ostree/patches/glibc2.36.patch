diff -Naur a/src/libostree/ostree-linuxfsutil.c b/src/libostree/ostree-linuxfsutil.c
--- a/src/libostree/ostree-linuxfsutil.c	2022-07-22 21:08:25.000000000 +0200
+++ b/src/libostree/ostree-linuxfsutil.c	2022-08-31 23:07:55.326330082 +0200
@@ -24,10 +24,12 @@
 
 #include <fcntl.h>
 #include <sys/ioctl.h>
+// This should be the only file including linux/fs.h; see
+// https://sourceware.org/glibc/wiki/Release/2.36#Usage_of_.3Clinux.2Fmount.h.3E_and_.3Csys.2Fmount.h.3E
+// https://github.com/ostreedev/ostree/issues/2685
+#include <linux/fs.h>
 #include <ext2fs/ext2_fs.h>
 
-#include "otutil.h"
-
 /**
  * _ostree_linuxfs_fd_alter_immutable_flag:
  * @fd: A file descriptor
@@ -88,3 +90,21 @@
 
   return TRUE;
 }
+
+/* Wrapper for FIFREEZE ioctl.
+ * This is split into a separate wrapped API for
+ * reasons around conflicts between glibc and linux/fs.h
+ * includes; see above.
+ */
+int
+_ostree_linuxfs_filesystem_freeze (int fd)
+{
+  return TEMP_FAILURE_RETRY (ioctl (fd, FIFREEZE, 0));
+}
+
+/* Wrapper for FITHAW ioctl.  See above. */
+int
+_ostree_linuxfs_filesystem_thaw (int fd)
+{
+  return TEMP_FAILURE_RETRY (ioctl (fd, FITHAW, 0));
+}
diff -Naur a/src/libostree/ostree-linuxfsutil.h b/src/libostree/ostree-linuxfsutil.h
--- a/src/libostree/ostree-linuxfsutil.h	2022-07-22 21:08:25.000000000 +0200
+++ b/src/libostree/ostree-linuxfsutil.h	2022-08-31 23:08:51.002499369 +0200
@@ -29,4 +29,7 @@
                                          GCancellable  *cancellable,
                                          GError       **error);
 
+int _ostree_linuxfs_filesystem_freeze (int fd);
+int _ostree_linuxfs_filesystem_thaw (int fd);
+
 G_END_DECLS
diff -Naur a/src/libostree/ostree-repo-commit.c b/src/libostree/ostree-repo-commit.c
--- a/src/libostree/ostree-repo-commit.c	2022-07-22 21:08:25.000000000 +0200
+++ b/src/libostree/ostree-repo-commit.c	2022-08-31 22:53:01.139605573 +0200
@@ -30,7 +30,6 @@
 #include <sys/xattr.h>
 #include <glib/gprintf.h>
 #include <sys/ioctl.h>
-#include <linux/fs.h>
 #include <ext2fs/ext2_fs.h>
 
 #include "otutil.h"
diff -Naur a/src/libostree/ostree-sysroot-deploy.c b/src/libostree/ostree-sysroot-deploy.c
--- a/src/libostree/ostree-sysroot-deploy.c	2022-07-22 21:08:25.000000000 +0200
+++ b/src/libostree/ostree-sysroot-deploy.c	2022-08-31 23:33:51.147061303 +0200
@@ -29,7 +29,6 @@
 #include <sys/ioctl.h>
 #include <stdbool.h>
 #include <sys/poll.h>
-#include <linux/fs.h>
 #include <err.h>
 
 #ifdef HAVE_LIBMOUNT
@@ -1476,7 +1475,7 @@
            * EOPNOTSUPP: If the filesystem doesn't support it
            */
           int saved_errno = errno;
-          (void) TEMP_FAILURE_RETRY (ioctl (rootfs_dfd, FITHAW, 0));
+          _ostree_linuxfs_filesystem_thaw (rootfs_dfd);
           errno = saved_errno;
           /* But if we got an error from poll, let's log it */
           if (r < 0)
@@ -1517,7 +1516,7 @@
           return glnx_throw (error, "aborting due to test-fifreeze");
         }
       /* Do a freeze/thaw cycle; TODO add a FIFREEZETHAW ioctl */
-      if (ioctl (rootfs_dfd, FIFREEZE, 0) != 0)
+      if (_ostree_linuxfs_filesystem_freeze (rootfs_dfd) != 0)
         {
           /* Not supported, we're running in the unit tests (as non-root), or
            * the filesystem is already frozen (EBUSY).
@@ -1539,7 +1538,7 @@
             return glnx_throw_errno_prefix (error, "ioctl(FIFREEZE)");
         }
       /* And finally thaw, then signal our completion to the watchdog */
-      if (TEMP_FAILURE_RETRY (ioctl (rootfs_dfd, FITHAW, 0)) != 0)
+      if (_ostree_linuxfs_filesystem_thaw (rootfs_dfd) != 0)
         {
           /* Warn but don't error if the filesystem was already thawed */
           if (errno == EINVAL)
diff -Naur a/src/ostree/ot-main.c b/src/ostree/ot-main.c
--- a/src/ostree/ot-main.c	2022-07-22 21:08:25.000000000 +0200
+++ b/src/ostree/ot-main.c	2022-08-31 22:53:01.139605573 +0200
@@ -28,7 +28,6 @@
 #include <string.h>
 #include <sys/statvfs.h>
 #include <sys/mount.h>
-#include <linux/fs.h>
 
 #include "ot-main.h"
 #include "ostree.h"
