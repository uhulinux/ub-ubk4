--- vavoom-1.33/source/host.cpp~	2016-08-09 12:31:16.000000000 +0200
+++ vavoom-1.33/source/host.cpp	2016-08-09 12:42:15.942913575 +0200
@@ -522,8 +522,8 @@ void Host_Error(const char *error, ...)
 
 COMMAND(Version)
 {
-	GCon->Log("VAVOOM version " VERSION_TEXT" (r" SVN_REVISION_STRING ").");
-	GCon->Log("Compiled "__DATE__" "__TIME__".");
+	GCon->Log("VAVOOM version " VERSION_TEXT " (r" SVN_REVISION_STRING ").");
+	GCon->Log("Compiled " __DATE__ " " __TIME__ ".");
 }
 
 //==========================================================================
--- vavoom-1.33/source/vc_expr_invoke.cpp~	2010-09-01 20:26:05.000000000 +0200
+++ vavoom-1.33/source/vc_expr_invoke.cpp	2016-08-09 12:41:08.959449151 +0200
@@ -740,7 +740,7 @@ void VInvocation::CheckParams(VEmitConte
 					if (!Args[i]->Type.Equals(Func->ParamTypes[i]))
 					{
 						//FIXME This should be error.
-						if (!Func->ParamFlags[NumArgs] & FPARM_Optional)
+						if (!(Func->ParamFlags[NumArgs] & FPARM_Optional))
 						{
 							Args[i]->Type.CheckMatch(Args[i]->Loc, Func->ParamTypes[i]);
 							//ParseError(Args[i]->Loc, "Out parameter types must be equal");
@@ -750,7 +750,7 @@ void VInvocation::CheckParams(VEmitConte
 				}
 				else
 				{
-					if (!Func->ParamFlags[NumArgs] & FPARM_Optional)
+					if (!(Func->ParamFlags[NumArgs] & FPARM_Optional))
 					{
 						Args[i]->Type.CheckMatch(Args[i]->Loc, Func->ParamTypes[i]);
 					}
--- vavoom-1.33/utils/vcc/vcc.cpp~	2016-08-09 12:31:16.000000000 +0200
+++ vavoom-1.33/utils/vcc/vcc.cpp	2016-08-09 12:43:16.904336245 +0200
@@ -171,7 +171,7 @@ static void DisplayUsage()
 {
 	//	Print usage.
 	printf("\n");
-	printf("VCC Version 1.%d. Copyright (c)2000-2001 by JL.          ("__DATE__" "__TIME__")\n", PROG_VERSION);
+	printf("VCC Version 1.%d. Copyright (c)2000-2001 by JL.          (" __DATE__ " " __TIME__ ")\n", PROG_VERSION);
 	printf("Usage: vcc [options] source[.c] [object[.dat]]\n");
 	printf("    -d<file>     Output debugging information into specified file\n");
 	printf("    -a<function> Output function's ASM statements into debug file\n");
